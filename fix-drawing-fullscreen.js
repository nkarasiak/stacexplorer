/**\n * Quick Fix for Map Drawing Fullscreen Issue\n * Add this script to your HTML to completely prevent fullscreen AI search during drawing\n */\n\n(function() {\n    console.log('\ud83d\udd27 Loading comprehensive map drawing fix...');\n    \n    // Wait for the app to initialize\n    function waitForApp() {\n        if (window.stacExplorer?.inlineDropdownManager && window.stacExplorer?.aiSmartSearch) {\n            initializeDrawingFix();\n        } else {\n            setTimeout(waitForApp, 500);\n        }\n    }\n    \n    function initializeDrawingFix() {\n        console.log('\ud83c\udfaf Initializing comprehensive drawing fix...');\n        \n        const inlineManager = window.stacExplorer.inlineDropdownManager;\n        const aiSearch = window.stacExplorer.aiSmartSearch;\n        const mapManager = window.stacExplorer.mapManager;\n        \n        // Store original methods\n        let originalShowMinimalist = aiSearch.showMinimalistSearch;\n        let originalStartDrawing = mapManager.startDrawingBbox;\n        let isDrawingActive = false;\n        \n        // Override AI search to block during drawing\n        function blockAISearch() {\n            console.log('\ud83d\udeab Blocking fullscreen AI search during drawing');\n            aiSearch.showMinimalistSearch = function() {\n                console.log('\ud83d\udeab BLOCKED: Fullscreen AI search prevented during drawing');\n                return Promise.resolve();\n            };\n        }\n        \n        // Restore AI search after drawing\n        function restoreAISearch() {\n            console.log('\u2705 Restoring fullscreen AI search after drawing');\n            aiSearch.showMinimalistSearch = originalShowMinimalist;\n        }\n        \n        // Override map drawing method\n        mapManager.startDrawingBbox = function(callback) {\n            console.log('\ud83c\udfaf INTERCEPTED: Map drawing started - preventing fullscreen');\n            \n            isDrawingActive = true;\n            blockAISearch();\n            \n            // Call original method with our wrapper\n            return originalStartDrawing.call(this, function(bbox) {\n                console.log('\ud83d\udccd INTERCEPTED: Drawing completed - handling inline');\n                \n                // Update location inline\n                if (inlineManager) {\n                    inlineManager.updateSearchSummary('location', 'MAP SELECTION');\n                    \n                    // Update AI search helper state\n                    if (inlineManager.aiSearchHelper) {\n                        inlineManager.aiSearchHelper.selectedLocation = bbox;\n                        inlineManager.aiSearchHelper.selectedLocationResult = {\n                            formattedName: 'Map Selection',\n                            shortName: 'Map Selection',\n                            bbox: bbox,\n                            category: 'drawn'\n                        };\n                    }\n                }\n                \n                // Show success notification\n                if (window.stacExplorer.notificationService) {\n                    window.stacExplorer.notificationService.showNotification('\ud83d\udccd Location drawn and applied!', 'success');\n                }\n                \n                // Reset state after delay\n                setTimeout(() => {\n                    isDrawingActive = false;\n                    restoreAISearch();\n                    console.log('\u2705 Drawing process completed - fullscreen AI search restored');\n                }, 1000);\n                \n                // Call original callback if provided\n                if (callback && typeof callback === 'function') {\n                    callback(bbox);\n                }\n            });\n        };\n        \n        // Also intercept any geometry sync events\n        document.addEventListener('geometryChanged', function(event) {\n            if (isDrawingActive) {\n                console.log('\ud83d\udeab BLOCKED: Geometry change event during drawing');\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }, true);\n        \n        // Intercept drawing completion events\n        document.addEventListener('drawingCompleted', function(event) {\n            if (isDrawingActive) {\n                console.log('\ud83d\udeab BLOCKED: Drawing completion event');\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }, true);\n        \n        console.log('\u2705 Comprehensive drawing fix initialized successfully!');\n        console.log('\ud83c\udfaf Map drawing will now update sidebar inline without fullscreen');\n    }\n    \n    // Start the fix when DOM is ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', waitForApp);\n    } else {\n        waitForApp();\n    }\n    \n})();\n\nconsole.log('\ud83d\udd27 Map drawing fullscreen fix script loaded');\nconsole.log('\ud83c\udfaf This will prevent fullscreen AI search from opening during map drawing');\n